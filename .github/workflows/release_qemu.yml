name: Release CLI Tool

on:
  push:
    tags:
      - 't*.*.*'

permissions:
  contents: write

jobs:
  build-macos:
    runs-on: macos-latest

    steps:
      - name: ✍ Checkout repository
        uses: actions/checkout@v4

      - name: 🦀 Install Rust
        run: |
          rm -rf $HOME/.rustup $HOME/.cargo
          curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
          source $HOME/.cargo/env
          rustup update
          rustup default stable
          rustup target add aarch64-apple-darwin

      - name: Check if target was added
        run: rustup show

      - name: 📦 Install clang (if missing)
        run: |
          if ! command -v clang &> /dev/null; then
            brew install clang
          fi

      - name: 🛠 Build for ARM Mac
        run: |
          export CARGO_TARGET_AARCH64_APPLE_DARWIN_LINKER=/usr/bin/clang
          cargo build --release --target aarch64-apple-darwin
          mkdir -p dist
          cp target/aarch64-apple-darwin/release/rtyping dist/rtyping-aarch64-apple-darwin

      - name: 🔝 Upload to Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            dist/rtyping-aarch64-apple-darwin
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-linux:
    runs-on: ubuntu-latest

    steps:
      - name: ✍ Checkout repository
        uses: actions/checkout@v4

      - name: 🛠 Set up Docker and build for ARM Linux
        run: |
          sudo apt update
          sudo apt install -y qemu binfmt-support qemu-user-static

          # QEMU を Docker に登録
          docker run --rm --privileged multiarch/qemu-user-static --reset -p yes

          # ARM64 コンテナを起動してビルド処理を実行
          docker run --rm -v ${{ github.workspace }}:/workspace arm64v8/debian:bookworm sh -c "
          apt update && apt install -y libasound2-dev &&
          curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y &&
          source \$HOME/.cargo/env &&
          cd /workspace &&
          \$HOME/.cargo/bin/cargo build --release
          "

      - name: 🚛 Move the binary
        run: |
          mkdir -p dist
          cp target/release/rtyping dist/rtyping-aarch64-unknown-linux-gnu

      - name: 🆙 Upload to Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            dist/rtyping-aarch64-unknown-linux-gnu
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
